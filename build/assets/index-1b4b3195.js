import{r as p,bU as x,j as v}from"./vendor-4af360a6.js";import{aB as D,av as N,a2 as C,aC as A,ar as I,F,I as H,S as O,d as B,N as P}from"./index-9e567fbd.js";const w=async(s,a,o)=>{o(!1);const c=a.map(d=>{if(Array.isArray(d.data[0])){const e=d.data.map(u=>Object.assign({},...u==null?void 0:u.map(t=>{var r,m;const f={};return t!=null&&t.fieldName&&(f[t==null?void 0:t.fieldName]=(r=t==null?void 0:t.value)!=null&&r.title?(m=t==null?void 0:t.value)==null?void 0:m.title:t==null?void 0:t.value),f}))),n={};return n[s]=JSON.stringify(e),n}else return d.data.map(e=>{const n={};return e!=null&&e.fieldName&&(n[(e==null?void 0:e.fieldName)??""]=typeof e.value!="object"?e==null?void 0:e.value:e.value.title),e.type==="multiselect"&&(n[(e==null?void 0:e.fieldName)??""]=JSON.stringify(e==null?void 0:e.value.map(u=>u.title))),n})}).flat(),i=Object.assign({},...c);i.holiday_type=="Ежегодный (основной) оплачиваемый отпуск"?i.holiday_type=1:i.holiday_type=="Ежегодный дополнительный оплачиваемый отпуск (в т.ч. учебный)"?i.holiday_type=2:i.holiday_type=="Отпуск без сохранения заработной платы"?i.holiday_type=3:i.holiday_type=="Отпуск по коллективному договору"&&(i.holiday_type=4),!(await D.sendBufferHolidayPlanningFx({employeeGuid:i.jobGuid,type:i.holiday_type,start:i.holiday_start,end:i.holiday_end})).isError&&o(!0)},E=s=>{const a=s.find(o=>o.fieldName==="holiday_type");return a!=null&&a.value&&(a==null?void 0:a.value).title==="Отпуск по коллективному договору"?{coll_dog:"collDog"}:{coll_dog:null}},G=(s,a,o,c,i,y,d,e,n,u,t)=>{const{surname:f,name:r,patronymic:m}=s,h=c||new Date().toISOString(),g=y||new Date().toISOString(),b=e||"";return{title:"Заявление о предоставлении отпуска",data:[{title:"ФИО",type:"simple-text",value:f+" "+r+" "+m,fieldName:"fio",visible:!0},{title:"Должность",type:"simple-text",fieldName:"post",value:a[o].jobTitle.toString(),visible:!0},{title:"Подразделение",type:"simple-text",value:a[o].subDivision.toString(),fieldName:"subDivision",visible:!0},{title:"Вид отпуска",type:"select",fieldName:"holiday_type",value:u,editable:!0,required:!0,onChange:l=>{t(l)},width:"100%",items:[{id:0,title:"Ежегодный (основной) оплачиваемый отпуск"},{id:1,title:"Ежегодный дополнительный оплачиваемый отпуск (в т.ч. учебный)"},{id:2,title:"Отпуск без сохранения заработной платы"},{id:3,title:"Отпуск по коллективному договору"}]},{title:"Категория для предоставления отпуска",type:"select",fieldName:"holiday_type_coll",value:b,editable:!0,required:!0,onChange:l=>{n(l),d(N(l?+l.data:0,h+5))},width:"100%",specialType:"collDog",items:[{id:0,title:"Работникам, имеющим двоих и более детей в возрасте до 14 лет",data:3},{id:1,title:"Работникам, имеющим ребенка-инвалида в возрасте до 18 лет",data:5},{id:2,title:"Одиноким матерям (отцам)",data:5},{id:3,title:"Работникам в случаях рождения ребенка, регистрации брака, смерти близких родственников",data:3},{id:4,title:"Работникам, сопровождающим детей младшего школьного возраста в школу в первый день учебного года",data:1},{id:5,title:"Работникам, имеющим общий стаж работы в Университете от 20 до 25 лет",data:1},{id:6,title:"Работникам, имеющим общий стаж работы в Университете от 25 до 30 лет",data:2},{id:7,title:"Работникам, имеющим общий стаж работы в Университете от 30 до 35 лет",data:3},{id:8,title:"Работникам, имеющим общий стаж работы в Университете свыше 35 лет",data:4}]},{title:"Начало отпуска:",type:"date",value:c,fieldName:"holiday_start",editable:!0,mask:!0,onChange:l=>{i(l),d(l)},required:!0,minValueInput:N(5)},{title:"",type:"simple-text",value:a[o].jobGuid.toString(),fieldName:"jobGuid",visible:!1},{title:"Окончание отпуска:",type:"date",value:g,fieldName:"holiday_end",editable:!0,mask:!0,required:!0,onChange:l=>{d(l)},minValueInput:y||N(0),maxValueInput:N(e?+e.data:365,h)}]}},q=()=>{var _;const[s,a]=p.useState(null),[o,c]=p.useState(null),[i,y]=p.useState(null),[d,e]=p.useState(null),[n,u]=p.useState(null),{data:{dataUserApplication:t,dataWorkerApplication:f}}=C.useApplications(),{loading:r}=A.useBufferHolidayPlanning(),[m,h]=p.useState({}),[g,b]=p.useState(!1),l=g??!1,{id:j}=x(),S=+j;return p.useEffect(()=>{t&&f&&!r&&a(G(t,f,S,o,c,i,y,d,e,n,u))},[t,S,r,o,d,n]),p.useEffect(()=>{s&&t&&h(E(s.data))},[s]),v.jsx(I,{isDone:l,children:!!s&&!!a&&v.jsxs(F,{children:[v.jsx(H,{...s,collapsed:l,setData:a,specialFieldsNameConfig:m}),v.jsx(O,{text:"Отправить",action:()=>w(B.HOLIDAY_PLANNING,[s],b),isLoading:r,completed:g,setCompleted:b,repeatable:!1,buttonSuccessText:"Отправлено",isDone:l,isActive:P(s,m)&&(((_=s.optionalCheckbox)==null?void 0:_.value)??!0),alerts:!1})]})})};export{q as default};
